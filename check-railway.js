#!/usr/bin/env node

// –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ Railway —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è
import https from 'https';

const RAILWAY_URL = 'https://callspace.railway.app';

console.log('üîç –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ Railway —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è...\n');

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ URL
function checkUrl(url, description) {
    return new Promise((resolve) => {
        const req = https.get(url, (res) => {
            let data = '';
            res.on('data', chunk => data += chunk);
            res.on('end', () => {
                console.log(`‚úÖ ${description}: ${res.statusCode}`);
                if (res.statusCode === 200) {
                    console.log(`   üìÑ –°–æ–¥–µ—Ä–∂–∏–º–æ–µ: ${data.substring(0, 100)}...`);
                }
                resolve({ status: res.statusCode, data });
            });
        });
        
        req.on('error', (err) => {
            console.log(`‚ùå ${description}: ${err.message}`);
            resolve({ status: 'ERROR', error: err.message });
        });
        
        req.setTimeout(5000, () => {
            console.log(`‚è∞ ${description}: Timeout`);
            req.destroy();
            resolve({ status: 'TIMEOUT' });
        });
    });
}

// –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–ª–∏—á–Ω—ã–µ —ç–Ω–¥–ø–æ–∏–Ω—Ç—ã
async function diagnose() {
    console.log(`üåê –ü—Ä–æ–≤–µ—Ä—è–µ–º: ${RAILWAY_URL}\n`);
    
    // –ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞
    await checkUrl(RAILWAY_URL, '–ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞');
    
    // API —ç–Ω–¥–ø–æ–∏–Ω—Ç—ã
    await checkUrl(`${RAILWAY_URL}/api/server/info`, 'API Server Info');
    await checkUrl(`${RAILWAY_URL}/api/users`, 'API Users');
    
    // –°—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ —Ñ–∞–π–ª—ã
    await checkUrl(`${RAILWAY_URL}/client/index.html`, 'Client Index');
    await checkUrl(`${RAILWAY_URL}/client/messenger.html`, 'Messenger Page');
    await checkUrl(`${RAILWAY_URL}/client/admin.html`, 'Admin Page');
    
    console.log('\nüìã –†–µ–∑—É–ª—å—Ç–∞—Ç –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏:');
    console.log('‚ùå –ï—Å–ª–∏ –≤—Å–µ —ç–Ω–¥–ø–æ–∏–Ω—Ç—ã –≤–æ–∑–≤—Ä–∞—â–∞—é—Ç –æ—à–∏–±–∫–∏:');
    console.log('   1. –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –Ω–µ —Ä–∞–∑–≤–µ—Ä–Ω—É—Ç–æ –Ω–∞ Railway');
    console.log('   2. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ Railway dashboard');
    console.log('   3. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –ø—Ä–æ–µ–∫—Ç "callspace" —Å—É—â–µ—Å—Ç–≤—É–µ—Ç');
    console.log('   4. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å—Ç–∞—Ç—É—Å —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è');
    
    console.log('\n‚úÖ –ï—Å–ª–∏ –Ω–µ–∫–æ—Ç–æ—Ä—ã–µ —ç–Ω–¥–ø–æ–∏–Ω—Ç—ã —Ä–∞–±–æ—Ç–∞—é—Ç:');
    console.log('   1. –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —á–∞—Å—Ç–∏—á–Ω–æ —Ä–∞–∑–≤–µ—Ä–Ω—É—Ç–æ');
    console.log('   2. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è');
    console.log('   3. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤—Å–µ —Ñ–∞–π–ª—ã –∑–∞–≥—Ä—É–∂–µ–Ω—ã');
}

diagnose().catch(console.error);
